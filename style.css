:root {
  --posX: 0px;
  --posY: 200px;
  --rot: 0rad;
  --pers: 600px;
  --sAL: 0;
  --sAR: 0;
}

body {
  margin: 0;
  overflow: hidden;
  background-color: black;
}

* {
  transform-style: preserve-3d;
}

.r {
  perspective: var(--pers);
  perspective-origin: 0px 100px;
  transform: translateX(var(--pers)) translateY(200px);
}

.f {
  background: radial-gradient(
      farthest-corner at calc(var(--x) + var(--posX)) calc(var(--pers) + var(--y) - var(--posY)),
      #0000,
      #000f 1000px
    ),
    url(./assets/floor.png);
  transform-origin: 0;
  transform: rotateX(90deg) translateZ(calc(0.5 * var(--h) - 200px)) translateY(var(--pers))
    rotateZ(calc(-1 * var(--rot))) translateY(calc(-1 * var(--pers)))
    translateX(calc(-1 * var(--x) - var(--posX)))
    translateY(calc(0.5 * var(--h) - var(--y) + var(--posY)));
  position: absolute;
}

.w {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 200px;
  height: 300px;
  transform-origin: 0;
  background: linear-gradient(to left, rgba(0, 0, 0, var(--sAL, 0)), rgba(0, 0, 0, var(--sAR, 0))),
    url(./assets/wall.png) repeat;

  --translate: translateZ(var(--pers)) rotateY(var(--rot)) translateZ(calc(-1 * var(--pers)))
    translateX(calc(-1 * var(--posX))) translateY(-100px) translateZ(var(--posY));
}

.D::before {
  position: absolute;
  content: '';
  inset: 20px;
  top: 70px;
  bottom: -20px;
  border: 1px solid white;
  border-radius: 5px;
  background-color: black;
}

.w.N {
  transform: var(--translate) translateX(calc(-1 * var(--x))) translateZ(calc(-1 * var(--y)));
}
.w.E {
  transform: var(--translate) rotateY(-90deg) translateX(calc(-1 * var(--y))) translateZ(var(--x));
}
.w.S {
  transform: var(--translate) rotateY(180deg) translateX(var(--x)) translateZ(var(--y));
}
.w.W {
  transform: var(--translate) rotateY(90deg) translateX(var(--y)) translateZ(calc(-1 * var(--x)));
}
